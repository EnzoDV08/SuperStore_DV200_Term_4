rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Users collection and sub-collections
    match /users/{userId} {
      // Allow users to read and write their own user document
      allow read, write: if request.auth != null && request.auth.uid == userId;

      // Products sub-collection under a user
      match /products/{productId} {
        allow read: if request.auth != null; // Authenticated users can read
        allow create, update, delete: if request.auth != null && request.auth.uid == userId; // Only owner can modify
      }

      // Carts sub-collection under a user
      match /carts/{cartId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }

      // Orders sub-collection under a user
      match /orders/{orderId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }

match /orders/{orderId} {
    // Allow buyers to create, read, and delete their own orders
    allow create: if request.auth != null && request.auth.uid == request.resource.data.buyerId;
    allow read: if request.auth != null && (request.auth.uid == resource.data.buyerId || request.auth.uid == resource.data.sellerId);
    allow update: if request.auth != null && request.auth.uid == resource.data.sellerId;
    allow delete: if request.auth != null && request.auth.uid == resource.data.buyerId;
}

    // Global products collection
    match /products/{productId} {
      allow read: if true;  // Public read access
      allow create: if request.auth != null; // Any authenticated user can create
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.sellerId; // Only the owner can update/delete
    }

    // Global carts collection (each user has access to their own cart)
    match /carts/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

  // Global orders collection
match /orders/{orderId} {
  // Allow buyers to create, read, and delete their own orders
  allow create, read, delete: if request.auth != null && request.auth.uid == resource.data.buyerId;

  // Allow sellers to read and update orders related to them
  allow read, update: if request.auth != null && request.auth.uid == resource.data.sellerId;
}

    // Categories collection - accessible to all authenticated users
    match /categories/{categoryId} {
      allow read: if request.auth != null;
    }
  }
}
